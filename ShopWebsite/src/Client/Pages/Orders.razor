@page "/orders"
@using ShopWebsite.Client.Utils
@inject IOrderService _orderService
@inject IJSRuntime _js

<h3>Orders</h3>

@if (orders == null)
{
    <span>Loading your orders...</span>
}
else if (orders.Count <= 0)
{
    <span>You have no orders.</span>
}
else
{
    <button @onclick="DownloadExcelFile" class="btn btn-primary order-btn">Export in Excel</button>
    <button @onclick="DownloadPdfFile" class="btn btn-primary order-btn" style="margin-top: 20px;">Export in PDF</button>

    foreach (var order in orders)
    {
        <div class="container">
            <div class="image-wrapper">
                <img src="@order.ProductImageUrl" class="image" />
            </div>
            <div class="details">
                <h4>@order.Product</h4>
                <span>@order.OrderDate</span>
                <a href="orders/@order.Id">Show more...</a>
            </div>
            <div class="order-price">€@order.TotalPrice</div>
        </div> 
    }
}

<script>

    function saveAsFile(filename, bytesBase64){
        if (navigator.msSaveBlob) {
            var data = window.atob(bytesBase64);
            var bytes = new Unit8Array(data.length);
            for (var i = 0; i < data.length; i++) {
                bytes[i] = data.charCodeAt(i);
            }
            var blob = new Blob([bytes.buffer], { type: "application/octet-stream" });
            navigator.msSaveBlob(blob, filename);
        }
        else {
            var link = document.createElement("a");
            link.download = filename;
            link.href = "data:application/octet-stream;base64, " + bytesBase64;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
        
    }

    // function saveAsFile(filename, bytesBase64) {
    //     var link = document.createElement('a');
    //     link.download = filename;
    //     link.href = "data:application/octet-stream;base64," + bytesBase64;
    //     document.body.appendChild(link);
    //     link.click();
    //     document.body.removeChild(link);
    // }

</script>

@code {
    // private bool showUserMenu = false;

    List<OrderOverviewResponse> orders = null;

    // private string UserMenuCssClass => showUserMenu ? "show-menu" : null;

    // private void ToggleUserMenu()
    // {
    //     showUserMenu = !showUserMenu;
    // }

    // private async Task HideUserMenu()
    // {
    //     await Task.Delay(200);
    //     showUserMenu = false;
    // }

    protected override async Task OnInitializedAsync()
    {
        orders = await _orderService.GetOrders();
    }

    protected async Task DownloadPdfFile()
    {
        using (MemoryStream memoryStream = ExportService.GeneratePdf(orders))
        {
            await _js.SaveAs("Orders.pdf", memoryStream.ToArray());
        }
    }

    private async Task DownloadExcelFile()
    {
        var excelBytes = ExportService.GenerateExcelWorkbook(orders);
        await _js.InvokeVoidAsync("saveAsFile", $"Orders_{DateTime.Now.ToString("yyyyMMdd_HHmmss")}.xlsx", Convert.ToBase64String(excelBytes));
    }
}
