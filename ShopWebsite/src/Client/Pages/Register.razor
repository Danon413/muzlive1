@page "/register"
@inject IAuthService _authService

<PageTitle>Register</PageTitle>

<section class="text-center text-lg-start">
    <style>
        .cascading-right {
            margin-right: -50px;
        }
    </style>

    <!-- Jumbotron -->
    <div class="container py-4">
        <div class="row g-0 align-items-center">
            <div class="col-lg-6 mb-5 mb-lg-0">
                <img src="https://images.pexels.com/photos/210922/pexels-photo-210922.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1"
                     class="w-350 rounded-4 shadow-4" alt="" />
            </div>
            <div class="col-lg-6 mb-5 mb-lg-0">
                <div class="card cascading-right" style="">
                    <div class="card-body p-5 text-center" style="background-color: background: rgb(0,0,0);
background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(33,40,48,1) 100%); color: white;">
                        <h2 class="fw-bold mb-5">Register</h2>
                        <EditForm Model="user" OnValidSubmit="HandleRegistration">
                            <DataAnnotationsValidator />
                            <div class="mb-3">
                                <div data-mdb-input-init class="form-outline mb-4">
                                    <input type="email" id="email" @bind="user.Email" class="form-control" />
                                    <label class="form-label" for="email">Email address</label>
                                </div>
                                <ValidationMessage For="@(() => user.Email)" />
                            </div>
                            <div class="mb-3">
                                <div data-mdb-input-init class="form-outline mb-4">
                                    <input type="password" id="password" @bind="user.Password" class="form-control" />
                                    <label class="form-label" for="password">Password</label>
                                </div>
                                <ValidationMessage For="@(() => user.Password)" />
                            </div>
                            <div class="mb-3">
                                <div data-mdb-input-init class="form-outline mb-4">
                                    <input type="password" id="confirmPassword" @bind="user.ConfirmPassword" class="form-control" />
                                    <label class="form-label" for="confirmPassword">Confirm Password</label>
                                </div>
                                <ValidationMessage For="@(() => user.ConfirmPassword)" />
                            </div>
                            <button type="submit" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-block mb-4">Register</button>
                        </EditForm>
                        <div class="@messageCssClass">
                            <span>@message</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Jumbotron -->
</section>

@code {
    UserRegister user = new();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await _authService.Register(user);
        message = result.Message;
        if (result.Success)
            messageCssClass = "text-success";
        else
            messageCssClass = "text-danger";
    }
}
